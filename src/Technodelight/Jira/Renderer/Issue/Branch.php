<?php

namespace Technodelight\Jira\Renderer\Issue;

use Symfony\Component\Console\Output\OutputInterface;
use Technodelight\GitShell\ApiInterface as Api;
use Technodelight\Jira\Domain\Issue;
use Technodelight\Jira\Helper\GitBranchCollector;
use Technodelight\Jira\Helper\TemplateHelper;
use Technodelight\Jira\Renderer\IssueRenderer;

class Branch implements IssueRenderer
{
    /**
     * @var \Technodelight\Jira\Helper\TemplateHelper
     */
    private $templateHelper;
    /**
     * @var \Technodelight\GitShell\ApiInterface
     */
    private $git;
    /**
     * @var GitBranchCollector
     */
    private $branchCollector;

    public function __construct(TemplateHelper $templateHelper, Api $git, GitBranchCollector $branchCollector)
    {
        $this->templateHelper = $templateHelper;
        $this->git = $git;
        $this->branchCollector = $branchCollector;
    }

    public function render(OutputInterface $output, Issue $issue)
    {
        $output->writeln($this->tab('<comment>branches:</comment>'));
        $output->writeln(
            $this->tab($this->tab($this->branchCollector->forIssueWithAutoGenerated($issue)))
        );
    }

    private function tab($string)
    {
        return $this->templateHelper->tabulate($string);
    }
}
