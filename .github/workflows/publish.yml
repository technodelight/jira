on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*'

name: Build and Create Release

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-dev -o

    - name: Install box
      run: wget https://github.com/humbug/box/releases/download/3.8.4/box.phar -O box && chmod 0755 box && pwd

    # Runs a single command using the runners shell
    - name: Build phar
      run: ./build --workflow

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: Phar build # optional
        # A file, directory or wildcard pattern that describes what to upload
        path: jira.phar

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./jira.phar
          asset_name: jira.phar
          asset_content_type: application/php
      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ steps.create_release.outputs.id }}
